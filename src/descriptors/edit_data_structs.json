[
    {
        "struct_name": "Add",
        "docstring": "Add new column `col` filled with `val`",
        "fields": [
            {
                "name": "col",
                "comment": "name of new column",
                "data_type": "Symbol"
            },
            {
                "name": "val",
                "comment": "value to add to new column",
                "data_type": "Any"
            }
        ],
        "supertype": "Edit"
    },
    {
        "struct_name": "Map",
        "docstring": "Define an `output` column containing values based on those in an
        `input` column. The mapping columns `from` -> `to` are contained in a .csv `file` in
        the coremaps directory. The columns `input' and 'from` should contain the same
        values, as should `output` and `to`.",
        "fields": [
            {
                "name": "file",
                "comment": "mapping .csv file name in the coremaps directory",
                "data_type": "String"
            },
            {
                "name": "from",
                "comment": "name of the mapping column containing input values",
                "data_type": "Symbol"
            },
            {
                "name": "to",
                "comment": "name of the mapping column containing output values",
                "data_type": "Symbol"
            },
            {
                "name": "input",
                "comment": "name of the input column to map",
                "data_type": "Symbol"
            },
            {
                "name": "output",
                "comment": "name of the output column created",
                "data_type": "Symbol"
            }
        ],
        "supertype": "Edit"
    },
    {
        "struct_name": "Melt",
        "docstring": "Normalize the dataframe by 'melting' columns into rows, lengthening the
        dataframe by duplicating values in the column `on` into new rows and defining 2 new columns:
            1. `var` with header names from the original dataframe.
            2. `val` with column values from the original dataframe.
        This operation can only be performed once per dataframe.",
        "fields": [
            {
                "name": "on",
                "comment": "name of column NOT included in melt",
                "data_type": "Array{Symbol,1}"
            },
            {
                "name": "var",
                "comment": "name of column containing header NAMES from the original dataframe",
                "data_type": "Symbol"
            },
            {
                "name": "val",
                "comment": "name of column containing VALUES from the original dataframe",
                "data_type": "Symbol"
            },
            {
                "name": "type",
                "comment": "Data type for the values in the VAL column",
                "data_type": "Any"
            }
        ],
        "supertype": "Edit"
    },
    {
        "struct_name": "Rename",
        "docstring": "Change column name `from` -> `to`.",
        "fields": [
            {
                "name": "from",
                "comment": "original column name",
                "data_type": "Symbol"
            },
            {
                "name": "to",
                "comment": "new column name",
                "data_type": "Symbol"
            }
        ],
        "supertype": "Edit"
    },
    {
        "struct_name": "Replace",
        "docstring": "Replace values in `col` `from` -> `to`.",
        "fields": [
            {
                "name": "col",
                "comment": "name of column containing values to be replaced",
                "data_type": "Symbol"
            },
            {
                "name": "from",
                "comment": "value to replace",
                "data_type": "Any"
            },
            {
                "name": "to",
                "comment": "new value",
                "data_type": "Any"
            }
        ],
        "supertype": "Edit"
    }
]