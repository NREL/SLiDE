path_in:  datasources/BEA/IO
file_out: bea_supply_io.csv
description: BEA IO Supply Table (71 Industry) -- https://www.bea.gov/industry/input-output-accounts-data

file_in:
    name:     Supply_1997-2017_SUM.xlsx
    sheet:    
        - 1997
        - 1998
        - 1999
        - 2000
        - 2001
        - 2002
        - 2003
        - 2004
        - 2005
        - 2006
        - 2007
        - 2008
        - 2009
        - 2010
        - 2011
        - 2012
        - 2013
        - 2014
        - 2015
        - 2016
    range:    B7:CG81

# OUTPUT COLUMNS -- ORDERED list of output columns and value types.
col_out:
    - input:        string
    - input_code:   string
    - output:       string
    - output_code:  string
    - year:         int
    - value:        float
    - units:        string

# RENAME -- Columns 'from' -> 'to'.
renaming:
    from:   Name
    to:     input

# MELT -- Normalize the dataframe by 'melting' columns into rows.
# This will lengthen the dataframe by duplicating values in the column 'on'
# into new rows. This will define two new columns:
#   (1) 'var' (of 'type') with header names from the original dataframe.
#   (2) 'val' with column values from the original dataframe.
melting:
    on:     input
    var:    output
    val:    value
    type:   String

# SET -- Define a column 'col' and set all elements to the value 'val'.
setting:
    col:    units
    val:    millions of us dollars (USD)

# REPLACE -- Values 'from' in the column 'col' with values 'to'.
replacing:
    col:    value
    from:   ...
    to:     0

# MAP -- Define an 'output' column containing values based on those in an
# 'input' column. The mapping columns 'from' -> 'to' are contained in a
# .csv 'file' in the core_maps directory. The columns 'input' and 'from'
# should contain the same values, as should 'output' and 'to'.
mapping:
    - file:   bea_all
      from:   description
      to:     from
      input:  input
      output: input_code
    - file:   bea_all
      from:   description
      to:     from
      input:  output
      output: output_code

appending:
    col:    year
    val:    sheet