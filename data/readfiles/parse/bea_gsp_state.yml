# Autogenerated from generate_yaml.xlsx
# TODO: industry_code, units
Editable: true

Path:  [.., data, datasources, BEA, GDP, State]

PathOut: [.., data, output, gsp_state.csv]

CSVInput:
  - {name: SAGDP2N__ALL_AREAS_1997_2017.csv,  descriptor: SAGDP2N}
  - {name: SAGDP3N__ALL_AREAS_1997_2017.csv,  descriptor: SAGDP3N}
  - {name: SAGDP4N__ALL_AREAS_1997_2017.csv,  descriptor: SAGDP4N}
  - {name: SAGDP5N__ALL_AREAS_1997_2017.csv,  descriptor: SAGDP5N}
  - {name: SAGDP6N__ALL_AREAS_1997_2017.csv,  descriptor: SAGDP6N}
  - {name: SAGDP7N__ALL_AREAS_1997_2017.csv,  descriptor: SAGDP7N}
  - {name: SAGDP8N__ALL_AREAS_1997_2017.csv,  descriptor: SAGDP8N}
  - {name: SAGDP9N__ALL_AREAS_1997_2017.csv,  descriptor: SAGDP9N}
  - {name: SAGDP11N__ALL_AREAS_1998_2017.csv, descriptor: SAGDP11N}

Order:
  - {col: year,          type: Int}
  - {col: region_code,   type: String}
  - {col: region_desc,   type: String}
  - {col: component,     type: String}
  - {col: industry_id,   type: String}
  - {col: industry_code, type: String}
  - {col: industry_desc, type: String}
  - {col: units,         type: String}
  - {col: value,         type: Float64}

Rename:
  - {from: GeoFIPS,                to: region_code}
  - {from: GeoName,                to: region_desc}
  - {from: Unit,                   to: units}
  - {from: Description,            to: industry_desc}
  - {from: ComponentName,          to: component}
  - {from: IndustryClassification, to: industry_code}
  - {from: IndustryId,             to: industry_id}

Match:
  - on:     \"(?<region_code>.{5})\"
    input:  region_code
    output: region_code
  - on:     (?<region_desc>.*)\*
    input:  region_desc
    output: region_desc

Melt:
  on:  [region_code, region_desc, component, units, industry_id, industry_code, industry_desc]
  var: year
  val: value

Map:
  - file:   [parse, gsp.csv]
    from:   from
    to:     to
    input:  component
    output: component
  - file:   [parse, regions.csv]
    from:   from
    to:     to
    input:  region_desc
    output: region_desc
  - file:   [parse, units.csv]
    from:   from
    to:     to
    input:  units
    output: units

Replace:
  - col:  value
    from: ["missing", "(NA)", "(D)", "(H)", "(L)", "(T)"]
    to:   0

Drop:
  - col: [Region, TableName]
    val: all
    operation: "=="
  - col: component
    val: missing
    operation: "=="
  - col: value
    val: 10.0
    operation: "<"
