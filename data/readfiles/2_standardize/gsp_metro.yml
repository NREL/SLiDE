Path: ["..", "data", "datasources", "BEA", "GDP", "Metro"]

CSVInput:
  - {name: MAGDP2_2001_2017_ALL_AREAS.csv,  descriptor: 2}
  - {name: MAGDP8_2001_2017_ALL_AREAS.csv,  descriptor: 8}
  - {name: MAGDP9_2001_2017_ALL_AREAS.csv,  descriptor: 9}
  - {name: MAGDP10_2001_2017_ALL_AREAS.csv, descriptor: 10}

Order:
  - {col: year,          type: Int}
  - {col: region_code,   type: String}
  - {col: cbsa_desc,     type: String}
  - {col: region_desc,   type: String}
  - {col: to,   type: String}
  - {col: component,     type: String}
  - {col: industry_id,   type: String}
  - {col: industry_code, type: String}
  - {col: industry_desc, type: String}
  - {col: units,         type: String}
  - {col: value,         type: Float64}

Rename:
  - {from: GeoFIPS, to: region_code}
  - from: GeoName
    to:   region_desc
  - from: Unit
    to:   units
  - from: Description
    to:   industry_desc
  - from: ComponentName
    to:   component
  - from: IndustryClassification
    to:   industry_code
  - from: IndustryId
    to:   industry_id

Melt:
  on: [region_code, region_desc, component, units, industry_id, industry_code, industry_desc]
  var: year
  val: value
  type: Any

# Map:
#   - file:   std/gsp.csv
#     from:   from
#     to:     to
#     input:  component
#     output: component

Map2:
  - file:   scale/census_cbsa.csv
    from:   cbsa_code
    to:     cbsa_desc
    input:  region_code
    output: NEW_region_code
  - file:   std/gsp.csv
    from:   from
    to:     to
    input:  component
    output: component

# Map:
#   - file: 
  # - file:   scale/census_cbsa.csv
  #   from:   cbsa_code
  #   to:     cbsa_desc
  #   input:  region_code
  #   output: NEW_region_code
#   - file:   std/regions.csv
#     from:   from
#     to:     to
#     input:  region
#     output: region
  # - file:   windc/gams/map_pce.csv
  #   from:   from
  #   to:     to
  #   input:  industry_desc
  #   output: industry_desc
#   # - file:   units.csv
#   #   from:   from
#   #   to:     to
#   #   input:  units
#   #   output: units

Drop:
  - col: [Region, TableName]
    val: all
    operation: "=="
  - col: value
    val: [missing, "(NA)", "(L)", "(D)", "(H)"]
    operation: "=="
  - col: component
    val: missing
    operation: "=="
  # - col: cbsa_desc
  #   val: missing
  #   operation: "=="